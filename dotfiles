#!/bin/sh

HOMEDIR="$HOME"
SRCDIR="$HOME/.local/share/dotfiles"
CONFIG_FILES=$(cat "$SRCDIR/config.txt")

setPath=${DOTFILES_DATA_HOME}
if [ -z setPath ]; then
	SRCDIR=$setPath
fi

function copy_file() {
	local dir=$(dirname $2)
	if [ ! -d $dir ]; then
		mkdir -p $dir
		echo "Created directory $dir"
	fi
	if [ -f $2 ]; then
		echo "Updated file $2"
	else
		echo "Copied file $2"
	fi
	cp -f $1 $2	
}

function update() {
	for file in ${CONFIG_FILES[@]}; do
		local files=$(find "$HOMEDIR/$file" -type f)
		for f in ${files[@]}; do
			local fname="$SRCDIR/${f/$HOMEDIR\//}"
			copy_file $f $fname
		done
	done
}

function clean() {
	local files=()	
	for file in ${CONFIG_FILES[@]}; do
		local fs=$(find "$SRCDIR/$file")
		files+=(${fs[@]})
	done
	
	local check_files=$(find $SRCDIR '(' -not -name "dotfiles" ')' -a '(' -not -name README.md ')' -a '(' -not -name config.txt ')' -a '(' -not -path "\/*.git*" ')' -a '(' -not -name Makefile ')')
	for f in ${check_files[@]}; do
		if [[ ! ${files[@]} =~ $f && -e $f ]]; then
			if [ -d $f ]; then
				rm -r $f
				echo "Deleted directory $f"
			else
				rm $f
				echo "Deleted file $f"
			fi
		fi
	done
}

function config() {
	"$EDITOR" "$SRCDIR/config.txt"
}

function help() {
	echo "Usage: dotfiles [Flag] [Command]"
	echo
	echo "Flag:"
	echo "     [-h|--help]: display help information"
	echo
	echo "Command:"
	echo "     update: copys config files from $HOMEDIR to $SRCDIR"
	echo "     clean: removes files not found in config from $SRCDIR"
	echo "     config: open config.txt with $EDITOR"
	echo "     help: display help information"
}

case $1 in
	"update") 
		update
		;;
	"clean")
		clean
		;;
	"config")
		config
		;;
	"help")
		help
		;;
	"-h")
		help
		;;
	"--help")
		help
		;;
	*)
		echo "[ERROR] Command was not recognized: $1"
		help
		;;
esac
#for f in ${SRCFILES[@]}; do
#	echo $f
#done
